#!/bin/bash
#
# bash install.sh [dest_dir]
#

if [[ $# > 2 || $1 == "--help" || $1 == "-h" ]]; then
	cat <<-EOF;
		Usage: $0 [destdir]

		Clones a pre-built binary distribution of the LSST Data Management
		Software Stack.
	
		dest_dir	EXPERIMENTAL: Install the stack to <destdir>, rather
		                than the directory it was originally built in. This
		                is an experimental feature and may cause some
		                misbehavior.
EOF
	exit;
fi

DEFROOT=/opt/lsst
ROOT=${1-$DEFROOT}

set -e

detectOS()
{
	OS=$(uname)
	MACH=$(uname -m)

	case $OS in
	"Darwin")
		OS=osx
		VER=$(sw_vers -productVersion | cut -d . -f 1-2)
		;;
	"Linux")
		if [ -f /etc/redhat-release ]; then
			OS="rhel_compatible"
			VER=$(cat /etc/redhat-release | sed -r 's/^.[^0-9.]*([0-9]*).*$/\1/')
		else
			echo "Unknown Linux flavor; please install from source."
		fi
	esac
	
	echo $OS-$VER-$MACH
}

checkPrereq()
{
	OS="$1"
	
	case $OS in
	rhel_compatible-6-*)
		for rpm in rsync gcc-c++ gcc-gfortran flex bison \
			   libXt-devel ncurses-devel readline-devel \
			   libuuid-devel zlib-devel bzip2-devel perl make; \
		do
			rpm --quiet -q "$rpm" || { MISSING_RPMS="$MISSING_RPMS $rpm"; }
		done
		if [[ ! -z $MISSING_RPMS ]]; then
			echo "Missing prerequisites: $MISSING_RPMS"
			echo "As root, run: 'yum install $MISSING_RPMS'"
			exit -1
		fi
		;;
	rhel_compatible-5-*)
		for rpm in which perl make gcc-c++ flex bison libX11-devel \
			   readline-devel zlib-devel gcc44-c++ gcc44-gfortran \
			   e2fsprogs-devel bzip2-devel libXt-devel libstdc++44-devel; \
		do
			rpm --quiet -q "$rpm" || { MISSING_RPMS="$MISSING_RPMS $rpm"; }
		done
		if [[ ! -z $MISSING_RPMS ]]; then
			echo "Missing prerequisites: $MISSING_RPMS"
			echo "As root, run: 'yum install $MISSING_RPMS'"
			exit -1
		fi
		;;
	esac
}

mkdir -p "$ROOT" || { echo "Failed to create $ROOT. Have you forgotten to run this script as root?"; exit -1; }
[[ -w "$ROOT" ]] || { echo "$ROOT is not writable. Have you forgotten to run this script as root?"; exit -1; }
ROOT=$(cd "$ROOT" && pwd)

OS=$(detectOS)
NAME="dmstack-$OS"
URLBASE="rsync://moya.dev.lsstcorp.org/dmstack"
URL="$URLBASE/$NAME/"

echo "Detected $OS. Hit CTRL-C if I'm wrong."
checkPrereq "$OS"

echo "Downloading to $ROOT"
echo "Downloading using rsync from $URL"
n=0
while read line; do
	n=$((n+1))
	[[ $((n % 1000)) == 0 ]] && { echo -n '#'; }
done < <(rsync --out-format='%n %b/%l' -az "$URL" "$ROOT")
[[ $n -ge 1000 ]] && echo ""
echo "$n files updated."

if [[ $ROOT != "$DEFROOT" ]]; then
	echo "Fixing up EUPS paths."
	( cd "$ROOT" && grep -Rl --exclude '*.pyc' --exclude '*~' "$DEFROOT" eups loadLSST.* | xargs sed -i \~ "s|$DEFROOT|$ROOT|" )
fi

cat <<-EOF;

	Done. The LSST Data Management stack has been installed in:
	
	    '$ROOT'

	. If using bash, type:

	    source $ROOT/loadLSST.sh"

	or, if using csh:

	    source $ROOT/loadLSST.csh"   

	to load version management with EUPS and begin using it.
EOF
